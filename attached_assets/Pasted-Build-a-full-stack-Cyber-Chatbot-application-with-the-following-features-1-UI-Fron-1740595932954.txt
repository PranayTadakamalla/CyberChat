Build a **full-stack Cyber Chatbot application** with the following features:

### **1️⃣ UI & Frontend (React.js)**
- **Futuristic, cyber-safe theme** with a sleek neon interface.
- Responsive **chat interface** with animated chat bubbles.
- **Signup/Login page** with OTP verification.
- **Header**: 
  - Left side: "Signup" and "Login" buttons (change to "Logout" after login).
  - Right side: "Cyber Chatbot" title.
- Restrict chatbot input **until user logs in**.
- Fetch **past conversations** after login.

### **2️⃣ Authentication (Firebase Auth with MFA)**
- Users must **sign up with email & password**.
- Enable **Multi-Factor Authentication (OTP-based verification)**.
- Restrict **unauthorized users** from accessing the chatbot.
- Store **user session in local storage** to persist login.

### **3️⃣ Backend (Node.js + Express.js)**
- API for **user authentication (signup, login, logout)**.
- **Cybersecurity-focused chatbot** using OpenAI API (optional: custom model).
- Restrict **non-cybersecurity questions**, responding with:  
  `"I'm here to assist with cybersecurity topics. If you need help with cybersecurity concepts, feel free to ask!"`
- Store **user conversations in MongoDB**.

### **4️⃣ Database (MongoDB with Mongoose)**
- **Users Collection** (email, password hash, MFA enabled).
- **Conversations Collection** (userID, messages, timestamps).
- Retrieve **past conversations** upon login.

### **5️⃣ Deployment & Security**
- **Frontend & Backend hosted on Replit**.
- Use **.env** for storing `MONGO_URI`, `FIREBASE_CONFIG`, and `OPENAI_API_KEY`.
- **Rate limiting & security measures** to prevent abuse.
- Ensure **fast response times and error-free execution**.

### **6️⃣ Bonus Features (Optional)**
- **Real-time messaging** using **Socket.io**.
- **AI-powered threat detection** in chat responses.
- **Admin panel** to monitor security alerts.

Generate the **entire full-stack application** with frontend, backend, authentication (MFA), and database, ready for deployment in Replit without needing to download manually.
